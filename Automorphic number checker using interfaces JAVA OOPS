/*
Problem Statement

Oviya is fascinated by automorphic numbers and wants to create a program to determine whether a given number 
is an automorphic number or not.

An automorphic number is a number whose square ends with the same digits as the number itself. 
For example, 25 = (25)2 = 625 



Oviya has defined two interfaces, 
NumberInput for taking user input and AutomorphicChecker for checking if a given number is automorphic.
The class AutomorphicNumber implements both interfaces.

Help her to complete the task.

Input format :
The input consists of a single integer n.

Output format :
If the input number is an automorphic number, print "n is an automorphic number".

Otherwise, print "n is not an automorphic number".
Refer to the sample output for formatting specifications.

Code constraints :
1 ≤ n ≤ 500

Sample test cases :
Input 1 :
25
Output 1 :
25 is an automorphic number
Input 2 :
7
Output 2 :
7 is not an automorphic number

*/

Solution:-

import java.util.Scanner;

// Interface for taking user input
interface NumberInput {
    int getInput();
}

// Interface for checking if a number is automorphic
interface AutomorphicChecker {
    boolean isAutomorphic(int number);
}

// Class that implements both interfaces
class AutomorphicNumber implements NumberInput, AutomorphicChecker {

    @Override
    public int getInput() {
        Scanner scanner = new Scanner(System.in);
        return scanner.nextInt();
    }

    @Override
    public boolean isAutomorphic(int number) {
        int square = number * number;
        return String.valueOf(square).endsWith(String.valueOf(number));
    }

    public static void main(String[] args) {
        AutomorphicNumber automorphicNumber = new AutomorphicNumber();
        
        int n = automorphicNumber.getInput();
        
        if (automorphicNumber.isAutomorphic(n)) {
            System.out.println(n + " is an automorphic number");
        } else {
            System.out.println(n + " is not an automorphic number");
        }
    }
}


